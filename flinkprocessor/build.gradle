plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.3'
}

apply plugin: "java"
apply plugin: "maven"
apply plugin: "application"
apply plugin: "maven-publish"

group = "io.pravega.example.idracdemo"
version = samplesVersion
archivesBaseName = "idracdemo-flinkprocessor"
description = "flinkprocessor"
mainClassName = "io.pravega.example.idracdemo.flinkprocessor.ApplicationMain"
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // change to 2.7.9 due to Flink shaded library version
    compile ("com.fasterxml.jackson.core:jackson-databind:2.7.9") {
        force = true
    }
    compile ("com.fasterxml.jackson.core:jackson-core:2.7.9") {
        force = true
    }
    compile ("com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.7.9") {
        force = true
    }
    compile ("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.7.9") {
        force = true
    }
    compile ("com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.7.9") {
        force = true
    }
    // Note that we must include the Elasticsearch client early in the classpath to avoid Netty version conflicts.
    // org.apache.flink:flink-runtime_2.11:1.3.1 includes io.netty:netty-all:4.0.27.Final which is too old.
    compile "org.elasticsearch.client:elasticsearch-rest-high-level-client:6.5.4"
    compile "org.slf4j:slf4j-api:1.6.6"
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "ch.qos.logback:logback-core:1.2.3"
    compile "net.logstash.logback:logstash-logback-encoder:4.11"
    compile "io.pravega:pravega-connectors-flink-${flinkShortVersion}_${flinkScalaVersion}:${pravegaFlinkConnectorVersion}"
    compile "org.apache.flink:flink-streaming-java_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-streaming-scala_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-ml_${flinkScalaVersion}:1.8.3"
    compile "org.apache.flink:flink-table_${flinkScalaVersion}:1.7.2"
    compile "org.apache.flink:flink-connector-elasticsearch6_${flinkScalaVersion}:${flinkVersion}"

    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20090211'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/fluent-hc
    compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.12'

    // enable Once copied jar file to libs folder.
    //compile files("./libs/flink-connector-influxdb_2.11-1.1-SNAPSHOT.jar")

    // https://mvnrepository.com/artifact/org.influxdb/influxdb-java
    compile group: 'org.influxdb', name: 'influxdb-java', version: '2.7'

    
    if (includePravegaCredentials.toBoolean()) {
        compile "io.pravega:pravega-keycloak-client:${pravegaCredentialsVersion}"
    }
    // common-library dependencies
    compile "com.google.guava:guava:20.0"
    compile "org.xerial:sqlite-jdbc:3.20.0"


    testCompile group: "junit", name: "junit", version: "4.11"
}

shadowJar {
    dependencies {
        exclude(dependency("org.scala-lang:scala-library"))
        exclude(dependency("org.scala-lang:scala-reflect"))
        exclude(dependency("org.scala-lang:scala-compiler"))
    }

    relocate "com.fasterxml", "com.dell.nautilus.analytics.shaded.com.fasterxml"
    relocate "com.google", "com.dell.nautilus.analytics.shaded.com.google"
    relocate "io.netty", "com.dell.nautilus.analytics.shaded.io.netty"

    classifier = ""

    zip64 true
}

distributions {
    main {
        baseName = archivesBaseName
        contents {
            into("lib") {
                from shadowJar
                from(project.configurations.shadow)
            }
        }
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username System.getenv("MAVEN_USER")
                password System.getenv("MAVEN_PASSWORD")
            }
            url = "http://localhost:9091/maven2"
        }
    }

    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}

